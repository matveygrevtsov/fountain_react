{"version":3,"sources":["fountain.js","img/coin1.svg","img/coin2.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["randomFromInterval","interval","Math","random","loadImages","arrayOfSrc","Promise","all","map","src","resolve","reject","img","Image","onload","onerror","err","loadImage","periodCalculator","prevTimestamp","timestamp","res","getPeriodCalculator","FountainItem","props","this","animationSpeed","power","spreadAngle","g","gravity","itemsSize","minItemsSize","maxItemsSize","rotationSpeed","skin","canvas","canvasRef","id","resetParams","t","shotAngle","PI","width","x","current","y","height","period","incrementTime","cos","sin","hidden","context","getContext","save","translate","rotate","drawImage","restore","move","FountainAnimator","state","setCanvasSize","window","addEventListener","innerWidth","innerHeight","imgSkins","then","skins","items","i","itemsNumber","push","length","createItems","requestAnimation","requestAnimationFrame","tick","clearRect","forEach","item","render","console","log","cancelAnimationFrame","App","fountainCanvasRef","useRef","useEffect","fountainAnimator","skin1","skin2","start","destroy","ref","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.542c4751.chunk.js","sourcesContent":["const randomFromInterval = (interval) =>\n  Math.random() * (interval[1] - interval[0]) + interval[0]\n\nconst loadImage = (src) =>\n  new Promise((resolve, reject) => {\n    const img = new Image()\n    img.src = src\n    img.onload = () => resolve(img)\n    img.onerror = (err) => reject(err)\n  })\n\nconst loadImages = (arrayOfSrc) =>\n  Promise.all(arrayOfSrc.map((src) => loadImage(src)))\n\n// Period = ms / fps\nconst getPeriodCalculator = () => {\n  let prevTimestamp = 0\n  return (timestamp) => {\n    const res = timestamp < 500 ? 0 : timestamp - prevTimestamp\n    prevTimestamp = timestamp\n    return res\n  }\n}\n\nconst periodCalculator = getPeriodCalculator()\n\nclass FountainItem {\n  constructor(props) {\n    this.animationSpeed = props.animationSpeed\n    this.power = props.power\n    this.spreadAngle = props.spreadAngle\n    this.g = props.gravity\n    this.itemsSize = [props.minItemsSize, props.maxItemsSize]\n    this.rotationSpeed = props.rotationSpeed\n    this.skin = props.skin\n    this.canvas = props.canvasRef\n    this.id = props.id\n    this.resetParams()\n    this.t = randomFromInterval([-10, 0])\n  }\n\n  resetParams() {\n    this.t = 0\n    this.shotAngle = randomFromInterval([\n      (Math.PI * (180 - this.spreadAngle)) / 360,\n      (Math.PI * (180 + this.spreadAngle)) / 360,\n    ])\n    this.width = randomFromInterval(this.itemsSize)\n    this.x = (this.canvas.current.width - this.width) / 2\n    this.y = this.canvas.current.height\n  }\n\n  incrementTime() {\n    this.t += (this.animationSpeed * FountainItem.period) / 1000\n  }\n\n  hidden() {\n    const canvas = this.canvas.current\n    return (\n      this.y > canvas.height + 2 * this.width ||\n      this.y < -2 * this.width ||\n      this.x > canvas.width + 2 * this.width ||\n      this.x < -2 * this.width\n    )\n  }\n\n  move() {\n    const canvas = this.canvas.current\n    this.incrementTime()\n    this.x =\n      (canvas.width - this.width) / 2 +\n      this.power * this.t * Math.cos(this.shotAngle)\n    this.y =\n      canvas.height -\n      this.power * this.t * Math.sin(this.shotAngle) +\n      (this.g * this.t * this.t) / 2\n    if (this.hidden()) {\n      this.resetParams()\n    }\n  }\n\n  render() {\n    const context = this.canvas.current.getContext('2d')\n    context.save()\n    context.translate(this.x + this.width / 2, this.y + this.width / 2)\n    context.rotate(this.t * this.rotationSpeed * (2 * (this.id % 2) - 1))\n    context.translate(-this.x - this.width / 2, -this.y - this.width / 2)\n    context.drawImage(this.skin, this.x, this.y, this.width, this.width)\n    context.restore()\n    this.move()\n  }\n}\n\nclass FountainAnimator {\n  constructor(props) {\n    this.state = props\n    this.canvas = props.canvasRef\n    this.setCanvasSize()\n    window.addEventListener('resize', () => this.setCanvasSize())\n  }\n\n  setCanvasSize() {\n    this.canvas.current.width = window.innerWidth\n    this.canvas.current.height = window.innerHeight\n  }\n\n  createItems() {\n    return loadImages(this.state.imgSkins).then((skins) => {\n      const items = []\n      for (let i = 0; i < this.state.itemsNumber; i++) {\n        items.push(\n          new FountainItem({\n            ...this.state,\n            skin: skins[i % skins.length],\n            id: i,\n          }),\n        )\n      }\n      return items\n    })\n  }\n\n  start() {\n    this.createItems().then(\n      (items) => {\n        const context = this.canvas.current.getContext('2d')\n        const tick = (timestamp) => {\n          FountainItem.period = periodCalculator(timestamp)\n          context.clearRect(\n            0,\n            0,\n            this.canvas.current.width,\n            this.canvas.current.height,\n          )\n          items.forEach((item) => item.render())\n          this.requestAnimation = requestAnimationFrame(tick)\n        }\n        this.requestAnimation = requestAnimationFrame(tick)\n      },\n      () => console.log('Images loading error'),\n    )\n  }\n\n  destroy() {\n    cancelAnimationFrame(this.requestAnimation)\n  }\n}\n\nexport default FountainAnimator\n","export default __webpack_public_path__ + \"static/media/coin1.2831f4f9.svg\";","export default __webpack_public_path__ + \"static/media/coin2.323f5163.svg\";","import React, { useEffect, useRef } from 'react'\nimport FountainAnimator from './fountain'\nimport skin1 from './img/coin1.svg'\nimport skin2 from './img/coin2.svg'\n\nconst App = () => {\n  const fountainCanvasRef = useRef(null)\n\n  useEffect(() => {\n    const fountainAnimator = new FountainAnimator({\n      animationSpeed: 2.9,\n      power: 155,\n      itemsNumber: 52,\n      spreadAngle: 99,\n      gravity: 8,\n      minItemsSize: 215,\n      maxItemsSize: 421,\n      rotationSpeed: 0.7,\n      imgSkins: [skin1, skin2],\n      canvasRef: fountainCanvasRef,\n    })\n    fountainAnimator.start()\n    return () => fountainAnimator.destroy()\n  }, [])\n\n  return <canvas ref={fountainCanvasRef} />\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}